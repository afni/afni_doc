

.. _tut_fs_fsprep:

*********************************
How to use FS recon-all with AFNI
*********************************


.. contents:: :local:

Introduction
============

**Download script:** :download:`fs_fsprep.tcsh <media/fs_fsprep/fs_fsprep.tcsh>`


.. highlight:: Tcsh

.. comment on creation of this script
   This script was generated from running:
     afni_doc/helper_tutorial_rst_scripts/tut_fs_fsprep_MARK.tcsh
   as described in the _README.txt in that same directory.

FreeSurfer (FS) provides a number of useful tools for brain imaging.
In particular, the parcellation/segmentations and anatomical surfaces
generated by ``recon-all`` can be used in lots of applications.

Here we describe using FS's ``recon-all``, and then bringing its
results into AFNI/SUMA-land.  (In this case, we are using FS
ver=7.1.1, but it should work equivalently for most earlier versions.)



Start-to-finish FS example
============================

This a compact example of going through the dataset check and running
FS.  It is, in fact, what is run on the AFNI Bootcamp data example (on
the anatomical in ``AFNI_data6/FT_analysis/FT/``).

First, we copy the dset to be in NIFTI format (if it isn't already)
using ``3dcopy``.  Then we run FS's ``recon-all`` to estimate
surfaces, tissue maps and specific anatomical parcellations.  To bring
that output into standard NIFTI and GIFTI format, as well as to
generate standard surfaces and other niceties, we run AFNI's
``@SUMA_Make_Spec_FS``:



.. code-block:: Tcsh

   #!/bin/tcsh
   
   # 0) Copy data to NIFTI format (if necessary):
   3dcopy FT_anat+orig.HEAD FT_anat_cp.nii.gz
   
   # 1) Run FreeSurfer, basic example A.
   recon-all                                                             \
       -all                                                              \
       -sd      .                                                        \
       -subjid  FT                                                       \
       -i       FT_anat_cp.nii.gz
   
   # 2) Import FS results into SUMA-land (and standardize surfaces).
   @SUMA_Make_Spec_FS                                                    \
       -fs_setup                                                         \
       -NIFTI                                                            \
       -sid    FT                                                        \
       -fspath ./FT
   

And that is all.  Note that ``recon-all`` will take a long time to run
(several hours).  There are some ways to speed it up a bit using its
internal parallelization, which you can read about in the next section.

.. _tut_fs_fsprep_par:

Run recon-all faster: ``-parallel``
=====================================

From the `FS documentation
<https://surfer.nmr.mgh.harvard.edu/fswiki/ReleaseNotes>`_, there has
been internal parallelization with parts of ``recon-all`` since v5.3,
using OpenMP (which is also what several AFNI programs use for
parallelization speedup).  You can/should read more about the details
from the FS documentation, but we describe using it here.

At least in the most recent version FS (v7.\*), you can add a
``-parallel`` option flag at the end of your ``recon-all`` command to
take advantage of a default amount of 4 CPUs.  So, going from the
first example, you could run::

    # example B: using default parallelization
    recon-all                                  \
        -all                                   \
        -sd      .                             \
        -subjid  FT                            \
        -i       FT_anat_cp.nii.gz             \
        -parallel

Additionally, you should have further control by adding an option
``-openmp ..``, whose single argument is the number of CPUs for OpenMP
to use.  Theoretically, this can be more than 4, if you have the
computing power available. So, you could try::

    # example C: using parallelization with 8 CPUs
    recon-all                                  \
        -all                                   \
        -sd      .                             \
        -subjid  FT                            \
        -i       FT_anat_cp.nii.gz             \
        -parallel                              \
        -openmp 8

As an anecdote, I ran each of the above ``recon-all`` cases on the
NIH's Biowulf cluster, for the same Bootcamp dataset described above.
In the parallel cases, I actually had 8 CPUs available for both (I
requested 8 CPUs from the cluster, and running ``afni_check_omp`` in
the terminal indeed returned the value of 8).  The ``recon-all``
timing results were as follows:

* **Ex A:** 9.181 hours  

* **Ex B:** 5.120 hours  

* **Ex C:** 5.093 hours  

So, using the ``-parallel`` option **does** seem to help significantly
speed things up (by about a factor of 2, here).  I did **not** get
further benefit by trying to increase the number of threads by also
including the ``-openmp ..`` option---I am not sure why. If you are
able to get further runtime improvement somehow, please let us know
how!

A note of filenames/paths with FS
===================================

Here we describe how to specify and link together output paths for
running ``recon-all`` and ``@SUMA_Make_Spec_FS``.

By default, FS's ``recon-all`` will put its output directory in a
location specified with a ``$SUBJECTS_DIR`` environment variable
created at setup.  For example, on my computer ``echo $SUBJECTS_DIR``
displayed ``/usr/local/freesurfer/subjects``.  However, I much prefer
to specify my own path/location, and hence I use the ``-sd ..``
option.

Consider the following command:

.. code-block:: none

   recon-all                                  \
       -all                                   \
       -sd      AAA                           \
       -subjid  BBB                           \
       -i       DSET.nii.gz
    
After this, the path to the top of the output directory would be: 
``AAA/BBB/``.  And to bring the FS output into AFNI/SUMA-land, we could
run:

.. code-block:: none

   @SUMA_Make_Spec_FS                         \
       -fs_setup                              \
       -NIFTI                                 \
       -sid    BBB                            \
       -fspath AAA/BBB

\.\.\. and the outputs of interest would be in the ``AAA/BBB/SUMA/``
directory.  Note how we use the subject ID "BBB" twice: it is required
as part of the path, but we use it optionally after ``-sid ..``, so
that various filenames contain it.

These conventionalities were used in the above start-to-finish
example.  But since we get paid by the word, we thought we would
describe such things in more explicit and general and technical and
detailed detail here.

A note on @SUMA_Make_Spec_FS outputs
======================================


The final ``SUMA/`` directory contains: volumetric outputs of
segmentations and parcellations, surfaces of various sizes and
geometry, and more.  Several of these data sets are direct copies of
FS output, but in NIFTI and other formats usable by AFNI.  We also
generate standardized surfaces, which are *very* useful for group
analysis, and you can read more  about that here:
`<https://pubmed.ncbi.nlm.nih.gov/16035046/>`_

We also derive some other datasets that we have found to be useful,
such as groupings of parcellated ROIs by tissue types.  Some of the
content of the directory is:

* **aparc+aseg_REN_\*.nii.gz**
    A family of volumetric datasets from the "2000" atlas parcellation
    used by FS.  These have been renumbered from the original FS
    lookup-table values for colorbar convenience in AFNI; the
    enumeration will still be consistent across subjects, and the same
    string labels are attached in a labletable (i.e., the same number
    and label goes with a given ROI, across all subjects).  For
    convenience, subsets of ROIs grouped by tissue or type have also
    been created (see the output of ``@SUMA_renumber_FS`` for more
    details on these).

    Recently, the ``*_REN_gmrois.nii.gz`` dset has been added, as a
    subset of the GM ROIs defined by FS.  This dataset contains the
    ROI-like regions of GM from the parcellation, and might be
    particularly useful for tractography or network correlation.

    |

* **aparc.a2009s+aseg_REN_\*.nii.gz**
    A family of volumetric datasets from the "2009" atlas parcellation
    used by FS.  The same renumbering and grouping, as described 
    for the "2000" atlases and ROI maps above, applies.
    
    |

* **fs_ap_wm.nii.gz**, **fs_ap_latvent.nii.gz**
    Two volumetric datasets of masks that have been found useful for
    ``afni_proc.py`` scripting, namely when applying tissue-based
    regressors.  The first is comprised of the main WM regions defined
    by FS, and the second is comprised of the lateral ventricles 
    
    For more details, see the output of ``@SUMA_renumber_FS``.

    |
    


