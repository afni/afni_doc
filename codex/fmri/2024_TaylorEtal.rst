.. _codex_fmri_2024_TaylorEtal:


**Taylor et al. (2024).** *A Set of FMRI Quality Control Tools in AFNI: Systematic, in-depth ...*
**************************************************************************************************

.. contents:: :local:

.. highlight:: Tcsh

Introduction
============

Here we present commands used in the following paper:

* | Taylor PA, Glen DR, Chen G, Cox RW, Hanayik T, Rorden C, Nielson
    DM, Rajendra JK, Reynolds RC (2024). **A Set of FMRI Quality Control
    Tools in AFNI: Systematic, in-depth and interactive QC with
    afni_proc.py and more.** Imaging Neuroscience 2: 1â€“39. 
    doi: 10.1162/imag_a_00246
  | `<https://www.ncbi.nlm.nih.gov/pmc/articles/PMC11382598/>`_

**Abstract:** 
Quality control (QC) assessment is a vital part of FMRI processing and
analysis, and a typically under discussed aspect of
reproducibility. This includes checking datasets at their very
earliest stages (acquisition and conversion) through their processing
steps (e.g., alignment and motion correction) to regression modeling
(correct stimuli, no collinearity, valid fits, enough degrees of
freedom, etc.) for each subject. There are a wide variety of features
to verify throughout any single subject processing pipeline, both
quantitatively and qualitatively. We present several FMRI
preprocessing QC features available in the AFNI toolbox, many of which
are automatically generated by the pipeline-creation tool,
afni_proc.py. These items include: a modular HTML document that covers
full single subject processing from the raw data through statistical
modeling; several review scripts in the results directory of processed
data; and command line tools for identifying subjects with one or more
quantitative properties across a group (such as triaging warnings,
making exclusion criteria or creating informational tables). The HTML
itself contains several buttons that efficiently facilitate
interactive investigations into the data, when deeper checks are
needed beyond the systematic images. The pages are linkable, so that
users can evaluate individual items across group, for increased
sensitivity to differences (e.g., in alignment or regression modeling
images). Finally, the QC document contains rating buttons for each "QC
block", as well as comment fields for each, to facilitate both saving
and sharing the evaluations. This increases the specificity of QC, as
well as its shareability, as these files can be shared with others and
potentially uploaded into repositories, promoting transparency and
open science. We describe the features and applications of these QC
tools for FMRI.


**Study keywords:** 
FMRI, EPI, MPRAGE, quality control, visualization, quantitative


**Main programs:** 
``open_apqc.py``, ``afni_proc.py``, ``sswarper2``, ``@ss_review_basic``,
``@ss_review_driver``, ``gen_ss_review_table.py``, ``gtykd_check``


| **Github page:**
| See these authors' github page for descriptions and downloads 
  of codes and supplementary text files:
| `<https://github.com/afni/apaper_apqc_etal/>`_

Download scripts
================

To download, either:

* \.\.\. click the link(s) in the following table (perhaps Rightclick
  -> "Save Link As..."): 

  .. list-table:: 
     :header-rows: 0

     * - |s01|
       - run ``sswarper2`` for nonlinear alignment to a template, and 
         skullstripping of the subject's T1w anatomical volume
     * - |s02|
       - run ``afni_proc.py`` for resting state FMRI analysis; this
         uses nonlinear warps estimated with ``sswarper2``

* \.\.\. or copy+paste into a terminal::

    curl -O https://afni.nimh.nih.gov/pub/dist/doc/htmldoc/codex/fmri/media/2024_TaylorEtal/do_13_ssw.tcsh
    curl -O https://afni.nimh.nih.gov/pub/dist/doc/htmldoc/codex/fmri/media/2024_TaylorEtal/do_20_ap.tcsh

View scripts
============


``do_13_ssw.tcsh``
-------------------------------------------

.. literalinclude:: /codex/fmri/media/2024_TaylorEtal/do_13_ssw.tcsh
   :linenos:

``do_20_ap.tcsh``
-------------------------------------------

.. literalinclude:: /codex/fmri/media/2024_TaylorEtal/do_20_ap.tcsh
   :linenos:

.. aliases for scripts, so above is easier to read
.. |s01| replace:: :download:`do_13_ssw.bash
                   </codex/fmri/media/2024_TaylorEtal/do_13_ssw.tcsh>`
.. |s02| replace:: :download:`do_20_ap.tcsh
                   </codex/fmri/media/2024_TaylorEtal/do_20_ap.tcsh>`
