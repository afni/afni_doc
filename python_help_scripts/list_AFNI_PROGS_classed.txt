++ 6 :: Interactive viewer GUIs
5 :: afni                :: GUI-based viewer for exploring data primarily as slices
5 :: suma                :: GUI-based viewer for exploring data in 3D: surfaces, tracts, graph nodes, and volume slices
2 :: aiv                 :: AFNI Image Viewer program


++ 3 :: Make/edit ROIs and clusters, resample
5 :: 3dresample          :: Rewrite dataset, possibly in new orientation, with new voxel size
2 :: 3dfractionize       :: Resample a mask to a different grid size
3 :: 3dclust             :: Find+report about clusters in a dataset (see 3dClusterize for a newer program with newer options and easier syntax)
5 :: 3dClusterize        :: Find clusters of voxels in a dataset and print out a table about the clusters
4 :: 3dmerge             :: Edit datasets (e.g., blur, cluster), and optionally combine them
3 :: 3dUndump            :: Create a 3D dataset from text data; complements 3dmaskdump
3 :: 3dROIMaker          :: Threshold and clusterize dataset, as well as inflate (esp. for tractography prep)
1 :: 3dExtrema           :: Find local extrema within volumes
1 :: 3dmaxima            :: Find local extrema within volumes
1 :: 3dClustCount        :: Apply thresholds to dsets at various levels, and just count clusters of various sizes; used mainly for simulations.


++ 3 :: Simple dset calcs (-> make new dsets)
5 :: 3dcalc              :: Voxel-by-voxel general purpose calculator
5 :: 3dmerge             :: Various spatial filters, thresholds, and averaging
5 :: 3dTstat             :: Various statistics of multi-brick datasets, voxel-by-voxel
4 :: 3dMean              :: Average datasets together, voxel-by-voxel, for each timept
1 :: 3dWinsor            :: Nonlinear order statistics filter for spatial smoothing
4 :: 3danisosmooth       :: Edge preserving filter for spatial smoothing
1 :: 3dLocalstat         :: Find simple statistical values for neighborhoods around each voxel
1 :: 3dLocalBistat       :: Compute various bivariate statistics for neighborhoods around each voxel
1 :: 3dLocalstat         :: Compute some local statistics in a neighborhood around each voxel
1 :: 3dLocalACF          :: Compute mixed model ACF parameters in a neighborhood around each voxel
1 :: 3dLocalPV           :: Compute the 'principal vector' from a time series dataset, in a neighborhood around each voxel
1 :: 3dLocalSVD          :: Compute the SVD from a time series dataset, in a neighborhood around each voxel
1 :: 3dLocalHistog       :: Compute the count of how many times each unique value occurs, in a neighborhood around each voxel
1 :: 3dTto1D             :: Collapse 4D data to 1D in various ways
1 :: 3dmatcalc           :: Applies matrix to datasets
1 :: 3dmatmult           :: Multiply datasets as matrices


++ 4 :: Compute various numbers from datasets
3 :: 3dBrickStat         :: Simple statistics (max, min, mean) for scripts
2 :: 3dExtrema           :: Find local maxima (or minima) of datasets
5 :: 3dFWHMx             :: Estimate FWHM for all sub-bricks of dataset
1 :: 3ddot               :: Dot product (correlation coefficient) of 2 sub-bricks
1 :: 3dStatClust         :: Find statistically connected clusters
1 :: 3dGetrow            :: Output voxel values for a row/column in x,y,z space
1 :: 3dFWHM              :: (obsolete -> use 3dFWHMx)


++ 1 :: Simulate/generate dsets
1 :: 3dTSgen              :: Generate 3D+time dataset from 1D model and noise
1 :: 3dClustSim           :: Simulate datasets and estimate statistical power
1 :: slow_surf_clustsim.py  :: Like 3dClustSim, but for surface data.
1 :: quick.alpha.vals.py   :: Companion to slow_surf_clustsim.py
1 :: 3dConvolve           :: Simulate datasets via convolution (for testing 3dDeconvolve)
1 :: 3dInvFMRI            :: Compute stimulus time series given activation map and 3D+time dataset
1 :: 3dDTtoNoisyDWI       :: Make a simulated DWI set with random noise, from DT+gradient information
1 :: 1dgenARMA11          :: Generate synthetic ARMA(1,1) correlated time series, to test 3dREMLfit


++ 3 :: Deal with 1D time series
1 :: 1dCorrelate          :: Calculate correlation coefficients between 1D columns, with confidence intervals
1 :: 1deval               :: 1D calculator (like 3dcalc for 1D files)
4 :: 1d_tool.py           :: Perform various manipulations of 1D data
4 :: 1dplot               :: Graph values from columns in a file
1 :: 1dcat                :: Catenate 1D files horizontally (use system program cat for vertical combining)
1 :: 1dgrayplot           :: Show values from columns in a file as bands of gray levels
3 :: 1dtranspose          :: Transpose 1D files (interchange rows and columns)
1 :: 1dmatcalc            :: Matrix calculator for 1D files
1 :: 1dsum                :: Add up all numbers in columns of a 1D file (can also do means)
1 :: 1dTsort              :: Sort each column of the input 1D file (separately)
1 :: 1dsvd                :: Compute the Singular Value Decomposition of a matrix (including PCA)
1 :: 1dUpsample           :: Interpolate columns of a 1D file to a finer grid
1 :: column_cat           :: Catenate data horizontally


++ 4 :: Blur and smooth dsets
5 :: 3dmerge              :: Process (e.g., blur) and optionally combine datasets
1 :: 3dBlurInMask         :: Blur a dataset, but only inside a mask (or masks)
1 :: 3dBlurToFWHM         :: Blur a dataset to a given level of smoothness (for inter-site studies)
1 :: 3danisosmooth        :: Anisotropic blurring of a dataset (e.g., to clean up structural images)
1 :: 3dMedianFilter       :: Smooth a 3D volume using a median filter


++ 5 :: Get info/stats within ROIs
4 :: 3dROIstats              :: Calculate dataset values from multiple ROIs
4 :: 3dmaskave               :: Calculate dataset values averaged over a ROI
4 :: 3dmaskdump              :: Output all dataset values in a ROI
4 :: 3dBrickStat             :: Calculate percentile values within dsets
1 :: 3dMax                   :: (obsolete -> use 3dBrickStat)
3 :: 3dUndump                :: Create dataset from text (inverse of 3dmaskdump)
1 :: 3dOverlap               :: Create mask that is overlap of nonzero voxels from multiple datasets
2 :: 3dfractionize           :: Resample a mask dataset to a different resolution
5 :: whereami                :: Get atlas region name for coordinates
1 :: 3dTto1D                 :: Collapse 4D data to 1D in various ways
1 :: @Atlasize               :: Make an atlas from a dataset and label text files
1 :: @MakeLabelTable         :: Assign labels to values
1 :: AFNI_atlas_spaces.niml  :: space, atlas, transformations definitions file
4 :: @measure_bb_thick       :: measure thickness using ball and box method
4 :: @measure_erosion_thick  :: measure thickness using erosion method
4 :: @measure_in2out         :: measure thickness between in and out masks
4 :: @thickness_master       :: compare thickness measurement methods

++ 5 :: Voxelwise calcs, esp. stats and tests
4 :: 3dMean                 :: Compute the average of a number of datasets
5 :: 3dttest++               :: Compute voxelwise t-tests (and GLMs) across collection of datasets (see 3dMEMA for generalizing to include within-subjects variance in model)
3 :: 3dGroupInCorr          :: With a group of dsets, calc voxelwise t-tests on group of corr maps wherever user clicks
1 :: 3dSetupGroupInCorr     :: Preliminary program to run when using 3dGroupInCorr
1 :: 3dClustSim             :: 3Monte Carlo simulation for multiple comparison correction
5 :: 3dTstat                :: Compute voxelwise statistics of time series datasets (e.g., mean, variance)
3 :: 3dTcorr1D              :: Correlation coefficient between 3D+time dataset and 1D time series
1 :: 3dTcorrelate           :: Compute correlation between two 3D+time datasets
3 :: 3dTcorrMap             :: Compute average correlation of every voxel with every other
1 :: 3dTfitter              :: Fit a linear model to each voxel time series, with various methods (L1, L2, LASSO)
1 :: 3dTfilter              :: Apply a linear filter to each voxel time series (archaic)
1 :: 3dTsort                :: Sort each voxelâ€™s time series in various ways
5 :: 3dMVM                  :: Group-analysis program that performs traditional ANOVA- and ANCOVA style computations, and multivariate modeling
5 :: 3dLME                  :: Group-analysis program that performs linear mixed-effects (LME) modeling analysis
5 :: 3dMEMA                 :: Group-analysis program that performs Mixed Effects Meta Analysis, modeling both within- and across-subjects variability
1 :: 3dRank
1 :: 3dRankizer
1 :: 3dANOVA                :: 1-way ANOVA (fixed effects)
1 :: 3dANOVA2               :: 2-way ANOVA (fixed, random, mixed effects)
1 :: 3dANOVA3               :: 3-way ANOVA (fixed, random, mixed effects)
1 :: 3dExtractGroupInCorr
1 :: 3dFDR                  :: False Discovery Rate analysis
1 :: AlphaSim                :: (obsolete -> use 3dClustSim)
1 :: 1dSEM                 :: Structural equation modeling (path analysis)  (why here???)  
1 :: 3dWilcoxon             :: Nonparametric Wilcoxon test
1 :: 3dKruskalWallis        :: Nonparametric Kruskal-Wallis test
1 :: 3dFriedman             :: Nonparametric Friedman test
1 :: 3dMannWhitney          :: Nonparametric 3dMannWhitney test
1 :: 3dRegAna               :: Voxel-wise linear regression analyses
1 :: 3dttest               :: (obsolete -> use 3dttest++)
1 :: 3dPval              :: Convert each statistical value in a dataset (e.g., t-statistic) to a p-value
1 :: 3dNormalityTest     :: Tests the input values at each voxel for normality, using the Anderson-Darling method


++ 5 :: Align/register/warp/axialize spatially
5 :: 3dvolreg                  :: Volumetric registration (rigid body in 3D, 6DOF linear)
5 :: align_epi_anat.py      :: Align 2 volumes (e.g. anat and EPI)
1 :: auto_warp.py             :: wrapper for nonlinear warping with 3dQwarp
1 :: @auto_tlrc               :: Automatic transformation of dataset to match Talairach template (rigid/12dof???)
3 :: @Align_Centers           :: Align the center of a dataset to another
1 :: afni_proc.py             :: Can wrap many registration operations
1 :: 3dWarp                   :: Non-rigid transformation of 3D coordinates
1 :: 3dWarpDrive              :: Volumetric registration, includes warping (12DOF, linear affine); prob use 3dAllineate or align_epi_anat.py (???)
3 :: @AddEdge                 :: Show two or more datasets with edges for alignment visualization
1 :: @align_partial_oblique   :: Align (non-oblique) full- and partial-coverage T1w datasets; consider 3dQwarp instead.
1 :: @auto_align               :: (obsolete -> use align_epi_anat.py)        
4 :: fat_proc_align_anat_pair  :: Align a T1w dset to a T2w dset, esp. as part of DWI processing and if incorporating FreeSurfer after
4 :: fat_proc_axialize_anat   :: Attempt to align major viewing planes of anatomical with FOV, based on WB alignment to a reference vol
1 :: @SSwarper                :: Skull-stripping program that uses a reference anatomical
1 :: @SUMA_AlignToExperiment  :: Align volume from FreeSurfer analysis to a different session's anatomical volume in order to warp surfaces similarly
5 :: 3dQwarp                :: Align two datasets using nonlinear warping (relatedly, see @SSwarper, auto_warp.py, @toMNI_Qwarpar)
1 :: 3dNwarpAdjust            :: Adjust a collection of nonlinear warps for template building (@toMNI_Qwarpar)
4 :: 3dNwarpApply             :: Apply a nonlinear warp to transform a dataset
1 :: 3dNwarpCalc              :: Carry out calculations on nonlinear warps
1 :: 3dNwarpCat               :: Combine linear and nonlinear warps (spatial transformations)
1 :: 3dNwarpFuncs             :: Compute various voxelwise information about a nonlinear warp (e.g., Jacobian)
1 :: 3dNwarpXYZ               :: Apply a nonlinear warp to a set of (x,y,z) triples
1 :: 3dTagalign              :: Align datasets by matching manually placed 'tags'
1 :: plugin(Edit Tagset)     :: Place 'tags' in a dataset interactively
1 :: 3drotate                :: Rigid body rotation of dataset in 3D
1 :: 3dAnatNudge              :: (obsolete -> use align_epi_anat.py); try to align EPI and structural volumes automatically
5 :: 3dAllineate             :: Cross-modality affine volume registration
1 :: cat_matvec              :: Utility for combining linear affine transformation matrices (e.g., from 3dAllineate)
1 :: adwarp                  :: Transform dataset using warp from dataset header
1 :: Vecwarp                 :: Transform 3-vectors using warp from dataset header
1 :: 2dImReg                 :: Slice-by-slice registration (rigid body in 2D)
5 :: 3dresample            :: Rewrite dataset in new orientation, with new voxel size
1 :: 3daxialize               :: (obsolete -> use 3dresample)
1 :: lpc_align.py             :: (obsolete -> use align_epi_anat.py)
1 :: @toMNI_Awarp            :: Make a group template - affine alignment
1 :: @toMNI_Qwarpar          :: Make a group template - iterative nonlinear alignment
1 :: uber_align_test.py      :: GUI for affine alignment with align_epi_anat.py
1 :: unWarpEPI.py            :: Blip-up/down unwarping nonlinear alignment
1 :: @Shift_Volume            :: Move origin of dataset by specified amount or shift between MNI and MNI_ANAT


++ 3 :: Update AFNI, install software (not demos)
1 :: @UpdateAfni                  :: (obsolete -> use @update.afni.binaries)
5 :: @update.afni.binaries       :: Update current AFNI binaries
4 :: rPkgsInstall                 :: Get+install all necessary R packages
5 :: afni_system_check.py        :: Evaluate present setup
1 :: @get.afni.version             :: Download an archived version of AFNI source code using github
1 :: afni_vcheck                   :: Check if update needed (compare present and available version numbers)


++ 2 :: Copy/convert/manipulate dsets
5 :: 3dcopy                 :: Copy a dataset to make new files
1 :: 3dBRAIN_VOYAGERtoAFNI
1 :: 3dAFNIto3D             :: Read image files, write AFNI format datasets
1 :: 3dAFNItoANALYZE        :: Convert AFNI format dataset to ANALYZE format
1 :: 3dAFNItoMINC           :: Convert AFNI format dataset to MINC format
1 :: 3dMINCtoAFNI           :: Convert MINC format dataset to AFNI format
1 :: 3dAFNItoNIFTI
1 :: 3dAFNItoNIML
1 :: 3dAFNItoRaw
1 :: 3dANALYZEtoAFNI         :: (obsolete -> use 3dcopy or to3d)
1 :: 3dCRUISEtoAFNI
3 :: 3dThreetoRGB           :: Convert 3 scalar datasets to 1 RGB AFNI format dataset
1 :: 3dPAR2AFNI.pl             :: (almost useless helpfile... obsolete???)
1 :: 3drename               :: Rename dataset files
1 :: 3ddup                 :: Make an 'empty' duplicate (warp-on-demand) of a dataset
1 :: 3dTwotoComplex        :: Create complex dataset from two sub-bricks
1 :: 3dEmpty               :: Create header file only for specified dimensions
1 :: 3dVecRGB_to_HSL       :: Convert RGB coloration to HSL values; typically intermed step in viewing prob. tracking results.
1 :: 3dMaskToASCII


++ 2 :: DICOM info and conversion
5 :: Dimon           :: Read DICOM files on disk or as they are created
5 :: dcm2niix_afni   :: Primary choice for converting DCM files of DWI dsets (and possibly FMRI)
2 :: to3d              :: Read image files, write AFNI format datasets (not usually directly used)
1 :: dicom_hdr         :: Print out information from one DICOM header
3 :: dicom_hinfo       :: Print out selected information from a number of DICOM headers
1 :: dicom_to_raw      :: For extracting only the binary image data from a DICOM file
1 :: @move.to.series.dirs  :: Partition DICOM images into run directectories
1 :: Ifile             :: Read GE realtime EPI files and runs to3d
1 :: Imon              :: (obs - use Dimon); Read GE realtime EPI files as they are created
1 :: rtfeedme          :: Dissect one dataset, sends images to AFNI realtime plugin
1 :: plugin(RT Options)  :: Control options for AFNI realtime image input
2 :: from3d            :: Write dataset slices into image files
1 :: abut              :: Create zero-filled slices to put into dataset gaps
1 :: dicom_hdr         :: Print information from a DICOM file
1 :: ge_header         :: Print information from a GE I. file
1 :: mayo_analyze      :: Print information froman ANALYZE .hdr file
1 :: siemens_vision    :: Print information from a Siemens Vision .ima file
1 :: Dimon1             :: (obsolete -> use Dimon)


++ 2 :: Quality checks (for 3D+time datasets or results)
4 :: 3dToutcount       :: Check voxel time series for quality (temporal outliers)
1 :: 3dTqual           :: Check dataset sub-bricks for quality (spatial outliers)
4 :: @radial_correlate  :: Check datasets for correlation artifact
1 :: @compute_gcor     :: Compute average pairwise correlation (GCOR), one number
4 :: gen_ss_review_scripts.py  :: Generate QC review scripts
1 :: gen_ss_review_table.py    :: Generate spread-sheet of review_basic results
1 :: 3dCountSpikes     :: (obsolete -> use 3dToutcount)


++ 2 :: Time series pre-processing 
4 :: 3dTshift           :: Shift slices to a common time origin (temporal interpolation)
1 :: 3dDespike          :: Remove spikes from voxel time series
1 :: 3dDetrend          :: Remove trends from voxel time series
1 :: 3dTproject         :: Project out time series (like -errts from 3dDeconvolve)
1 :: 3dFourier          :: FFT-based lowpass and highpass filtering
1 :: 3dTsmooth          :: Smooth time series in the time domain
3 :: 3dBrainSync        :: Alter one datasetâ€™s time series to be maximally correlated with another datasetâ€™s time series
1 :: 3dTRfix            :: Resample a dataset in time from an irregular grid to a regular grid
1 :: RetroTS.py         :: Generate slicewise physiological regressors


++ 2 :: Time series analysis 
4 :: 3dDeconvolve      :: Multiple linear regression and deconvolution (ordinary least squares)
5 :: 3dREMLfit         :: Multiple linear regression (generalized least squares)
1 :: 3dNLfim           :: Nonlinear regression
1 :: 3dLSS             :: Ad hoc version of IM regression, giving amplitudes for each stimulus event
1 :: 3dTcorrelate       :: Correlate two input datasets, voxel-by-voxel
1 :: 3dAutoTcorrelate   :: Correlate each voxel with every other voxel
1 :: 3dpc               :: Principal component analysis
1 :: 3dDeconvolve_f    :: (obsolete -> use 3dDeconvolve)
1 :: 3dSynthesize      :: Compute 3d+time dataset from partial model
1 :: plugin(Deconvolution)   :: Interactive deconvolution
1 :: 3ddelay            :: Single regressor linear analysis with time shifting
1 :: plugins(Nlfit and Nlerr)  :: Interactive nonlinear regression
1 :: 3dfim                  :: Linear regression (obsolete -> use 3dDeconvolve)
1 :: 3dfim+               :: Linear regression (obsolete -> use 3dDeconvolve)
1 :: 1dNLfit            :: Fit a general model to a vector of data


++ 2 :: Generate model 1D time series
3 :: 3dDeconvolve       :: Generate hemodynamic responses for stimulus timing files
1 :: 1dBport            :: Generate columns of sines and cosines for bandpassing
1 :: sqwave             :: Generate a square wave (a very old program)
1 :: waver              :: Generate hemodynamic responses to stimulus time series


++ 3 :: Compare dset volumes (masks or valued)
1 :: @DiceMetric      :: Computes Dice Coefficient between two datasets
4 :: 3dMatch            :: Find pairs of similar-looking subbricks between two groups of dsets
1 :: 3ddot              :: Calculate correlation coefficients between sub-brick pairs in a 4D dset
1 :: 3ddot_beta         :: Faster version of 3ddot, though currently just for calculating eta-squared
1 :: 3dOverlap          :: Count of number of voxels that are nonzero in ALL of the input dataset sub-bricks
5 :: 3dABoverlap        :: Count overlaps between 2 datasets (union, intersection, etc.)
5 :: 3dSliceNDice        :: Calculate Dice coefficients slice-by-slice (for all three FOV planes) between mask dsets.


++ 5 :: Build FMRI pipelines
1 :: uber_proc.py 
2 :: uber_subject.py           :: Graphical interface to help set up an afni_proc.py command (probably just use -> afni_proc.py directly; uber_subject.py does not have full range of options that afni_proc.py has;  recommended to use afni_proc.py examples as a basis, instead)
5 :: afni_proc.py            :: Generate tcsh script for processing single subject FMRI data
3 :: gen_group_command.py      :: Generate group analysis scripts
4 :: gen_ss_review_scripts.py  :: Generate QC review scripts
1 :: afni_restproc.py          :: (obsolete -> use afni_proc.py)


++ 4 :: SUMA surface calculations, formats and viewing
1 :: Surf2VolCoord
3 :: SurfaceMetrics            :: Provides information on surface mesh
1 :: SurfClust                 :: Find clusters on surfaces
1 :: SurfDist                  :: Output shortest distance between two nodes on a surface (along surface or Euclidean)
1 :: SurfDsetInfo              :: Display information about surface dataset
1 :: SurfExtrema                 :: Find local extrema in a (surface) dataset
1 :: SurfFWHM
1 :: SurfInfo                    :: Show information on surface
3 :: SurfMeasures                :: Compute various measurements for surface or pair of surfaces
1 :: SurfMesh                     :: Reduce number of points in surface mesh
1 :: SurfPatch                      :: Extract patch of surface or compute volume from specified nodes
1 :: SurfQual                       :: Quality check for surfaces
1 :: SurfRetinoMap
1 :: SurfSmooth                      :: Smooth surfaces
1 :: @SurfSmooth.HEAT_07.examples
1 :: SurfToSurf                      :: Interpolate data from one surface onto mesh of another surface
1 :: suma_change_spec
1 :: SUMA_glxdino
1 :: SUMA_paperplane
1 :: SUMA_pixmap2eps
3 :: quickspec                 :: Generate (basic) specification file for running suma
1 :: ROI2dataset               :: Convert ROI (e.g., after drawing) to SUMA-type dset
1 :: 3dSurfMask                :: Generate volumetric mask for inside of surface
1 :: ConvertDset               :: Converts a surface dataset from one format to another
1 :: ConvertSurface            :: Convert surface files among various formats
1 :: CompareSurfaces           :: Compute distances between two surfaces at each node
1 :: CreateIcosahedron
1 :: MapIcosahedron            :: Create new version of surface mesh using mesh of icosahedron
4 :: IsoSurface                :: Extract isosurface from a volume
1 :: @IsoMasks
4 :: 3dSurf2Vol                :: Compute volume equivalent from surface or pair of surfaces
4 :: 3dVol2Surf                :: Assign values to surface nodes from volumetric data
3 :: @surf_to_vol_spackle      :: Project values from surface to volume and fill holes 
5 :: @SUMA_Make_Spec_FS        :: Convert Freesurfer surfaces to SUMA spec files
2 :: @SUMA_Make_Spec_SF        :: Convert SureFit surfaces to SUMA spec files
4 :: DriveSuma                 :: Send commands to SUMA program from script
1 :: MakeColorMap               :: Make afni and suma colormaps


++ 3 :: Make/edit correlation matrices
1 :: @ROI_Corr_Mat           :: Make an NxN ROI correlation matrix of N ROIs (consider 3dNetCorr instead)
4 :: 3dNetCorr               :: Calculate correlation matrix of a set of ROIs, as well as WB maps of each
3 :: fat_mat_sel.py           :: Visualize functional correlation (*.netcc files) or tracted-WM property (*.grid file) matrices
1 :: 3dErrtsCormat            :: Compute the correlation matrix for the residual (or error) time series in a dataset


++ 4 :: Mask/skull-strip/segment
5 :: 3dAutomask              :: Generate a brain and skull-only mask
1 :: plugin(Draw Dataset)    :: Manually draw ROI mask datasets
3 :: @NoisySkullStrip        :: Strips the skull of anatomical datasets with low SNR
1 :: 3dinfill                :: Edit masks by filling in holes
4 :: 3dmask_tool             :: for combining/dilating/eroding/filling masks
1 :: 3dIntracranial          :: Strip off outside-the-brain voxels
5 :: 3dSkullStrip            :: Enhanced skull stripping
5 :: @SSwarper               :: Combines skull stripping with generating a warp to a nonlinear template space; directly combinable with afni_proc.py, too!
1 :: plugin(Gyrus Finder)    :: Interactively segment gray and white matter
1 :: 3dClipLevel             :: Find value to threshold off outside-the-brain voxels
3 :: 3dSeg                   :: Segment anatomical (t1w) volume into major brain tissue types


++ 2 :: Dset histograms
1 :: 3dAnhist                :: Create and plot histogram of dataset, print peaks
1 :: 3dhistog                :: Create histogram of dataset to a file
1 :: plugin(Histogram)       :: Interactively graphs histogram of a dataset (or ROI)
1 :: plugin(ScatterPlot)     :: Interactively graphs 1 sub-brick vs. another (or ROI)
3 :: 3dHist                  :: Compute histograms using functions for generating priors


++ 4 :: Edit dset headers
5 :: 3dinfo                  :: Print out information from the header
1 :: 3dAttribute             :: Print out a single header attribute
1 :: 3dnvals             :: Print out the number of sub-bricks (3D volumes) in a dataset
2 :: 3dnewid                 :: Assign a new ID code to a dataset (also, generate a random string for filenames); useful for scripting to get temporary filenames/directory names
4 :: 3drefit                 :: Lets you change attributes in a dataset header
1 :: 3dNotes                  :: Lets you put text notes into a dataset header
1 :: plugin(Dataset NOTES)   :: Interactive header notes editor
5 :: nifti_tool             :: Displays, modifies, copies nifti structures in datasets
1 :: gifti_tool               :: Displays, modifies, copies nifti structures in datasets
1 :: cifti_tool               :: Displays, modifies, copies nifti structures in datasets
1 :: nifti1_tool            :: (how diff than nifti_tool???)
3 :: 3dCM                     :: Estimate dset's center of mass, and allow recentering
1 :: @AfniOrient2RAImap       :: Convert orientation code into signed code used in AFNI header
1 :: @AfniOrientSign          :: Convert orientation code into signed +/-1 code relative to RAI and permutations
1 :: @FromRAI                 :: Convert RAI coordinates into another coordinate order
1 :: @ToRAI                   :: Convert coordinates to RAI order
1 :: @FullPath                :: Get absolute path of a file
1 :: @GetAfniBin              :: Returns path of afni executables
1 :: @GetAfniDims             :: Get dimensions of dataset
1 :: @GetAfniID               :: Get AFNI ID of dataset
1 :: @GetAfniOrient           :: Get orientation code of dataset
1 :: @GetAfniPrefix           :: Get prefix part of dataset name
1 :: @GetAfniRes              :: Get voxel resolution of dataset
1 :: @GetAfniView             :: Get afni view equivalent of dataset (+orig,+tlrc)
1 :: @parse_name              :: Return parts of an AFNI or NIFTI dataset name
1 :: @parse_afni_name         :: Return parts of an AFNI dataset name
1 :: ParseName                :: Return parts of a dataset name including AFNI specifiers
1 :: @FindAfniDsetPath        :: Find a path to dataset
1 :: @isOblique               :: Flag if dataset is marked as oblique
1 :: @Shift_Volume            :: Move origin of dataset by specified amount or shift between MNI and MNI_ANAT


++ 2 :: Changing dset spatial structure
1 :: 3daxialize               :: Rewrite dataset with slices in different direction
5 :: 3dresample               :: Rewrite dataset in new orientation, with new voxel size
3 :: 3dLRflip                 :: Flip dataset contents Left <-> Right
4 :: fat_proc_axialize_anat   :: Rotate brain to have standard viewing planes along slices


++ 2 :: Change dset temporal structure
1 :: 3dUpsample           :: Upsample in time (to a shorter TR)


++ 3 :: Volume editing/image processing
4 :: 3dedge3                :: Calculate edges in 3D
4 :: 3danisosmooth          :: Smooth a dataset using an anisotropic technique to preserve edges
4 :: 3dUnifize              :: Correct T1-weighted dataset for non-uniform histogram
1 :: 3dUniformize           :: (obsolete -> use 3dUnifize)
2 :: 3dSharpen              :: 3D sharpening filter applied to a dataset (to clean up a template)


++ 3 :: DWI/DTI/diffusion-related
1 :: 3dDTeig                :: Computes eigenvalues and eigenvectors for an input DT set
1 :: 3dDTtoDWI              :: Calculate 'ideal' DWIs for each grad, from DT+b0+gradient files 
1 :: 3dDTtoNoisyDWI         :: Make a simulated DWI set with random noise, from DT+gradient information
5 :: 3dDWItoDT            :: Estimate diffusion tensor and parameters from DWIs (and see fat_proc_dwi_to_dt)
4 :: 3dDWUncert           :: Estimate uncertainty of FA and V1 of diffusion tensor dataset, for tracking purposes (and see fat_proc_dwi_to_dt)
1 :: 3dEigsToDT             :: Calculate diffusion tensor dataset from eigenvalues and eigenvectors
1 :: 3dTORTOISEtoHere       :: Convert standard TORTOISE-format DTs to AFNI-format DTs
5 :: 3dTrackID            :: Perform deterministic, mini- or fully-probabilistic tracking for DTI or HARDI data
1 :: DTIStudioFibertoSegments  :: Convert a DTIStudio Fiber file to a SUMA segment file
1 :: @DTI_studio_reposition    :: (probably obsolete)
5 :: fat_proc_convert_dcm_anat   :: Wrapper to convert 3D dataset from DICOMs, with additional nice features.
5 :: fat_proc_convert_dcm_dwis   :: Wrapper to convert 4D dataset from DICOMs, with additional nice features.
5 :: fat_proc_decmap             :: Make a directionally-encoded color map of DTI data.
5 :: fat_proc_dwi_to_dt          :: Wrapper to estimate DT and parameters, and align datasets.
5 :: fat_proc_filter_dwis       :: Graphical interface to help user select out bad volumes (esp. from DWI dataset)
5 :: fat_proc_grad_plot         :: In progress...
5 :: fat_proc_imit2w_from_t1w   :: Invert a T1w dataset to imitate a T2w-type contrast dset (as a backup ref for DWI processing with TORTOISE)
5 :: fat_proc_map_to_dti        :: Wrapper to bring data (esp. FS surfaces and parcels) into DTI space
5 :: fat_proc_select_vols       :: Select out good valumes in a DWI dataset + associated text files
3 :: fat_roi_row.py             :: Select a single ROI's row out of a connectivity matrix file (*.grid or *.netcc)
4 :: @fat_tract_colorize        :: Visualize volumetric output maps from 3dTrackID tracking
1 :: InstaTract            :: (intermediate function only)
1 :: 3dProbTrackID        :: (obsolete -> use 3dTrackID)
1 :: map_TrackID           :: Apply linear affine transform to track file (*.trk format only)
5 :: @GradFlipTest       :: Test what 'flip', if any, is necessary for gradients in a DWI set
1 :: 1dDW_Grad_o_Mat          :: (obsolete -> use 1dDW_Grad_o_Mat++)
5 :: 1dDW_Grad_o_Mat++    :: Perform calculations and conversions of DWI gradients and matrices


++ 2 :: MVM modelling of (correlational or structural) matrices
1 :: fat_lat_csv.py        :: Make latent variables for CSV file data using factor analysis; esp for fat_mvm* usage
1 :: fat_mat_sel.py        :: Plot matrices from 3dNetcorr (*.netcc) or 3dTrackID (*.grid) files
1 :: fat_mvm_gridconv.py   :: Convert ooold 3dTrackID output *.grid files; should be unnecessary now
3 :: fat_mvm_prep.py       :: Combine *.grid/*.netcc files with subject data in CSV files; for fat_mvm* modeling
3 :: fat_mvm_review.py      :: (only beta)
3 :: fat_mvm_scripter.py    :: Read in a data table file (esp. from fat_mvm_prep.py) and build 3dMVM command


++ 2 :: Fourier related, time series/freq
1 :: 3dFourier
4 :: 3dDFT                         :: FFT along time axis
1 :: 3dFFT                         :: FFT along spatial axis
3 :: 3dLombScargle                 :: Calculate amp/pow spectrum (like FFT) along time axis with missing time points
3 :: 3dAmpToRSFC                   :: Calculate RSFC parameters (ALFF, fALFF, RSFA, etc.) from 3dLombScargle output
1 :: 1dBandpass
3 :: 3dBandpass
3 :: 3dRSFC                        :: Calculate RSFC parameters (ALFF, fALFF, RSFA, etc.) for uncensored time series
1 :: 3dPeriodogram
1 :: 3dWavelets
1 :: stimband


++ 3 :: Drive AFNI/SUMA, make images/snapshots/montages
2 :: @DriveAfni                    :: Example script to drive afni GUI with class data
4 :: DriveSuma                    :: Drive suma from external program
1 :: HalloSuma
2 :: @DriveSuma                    :: Example script to drive suma with class data
3 :: @Quiet_Talkers                :: Close all network talking afni and suma instances (often used at end of "talking" scripts)
5 :: @chauffeur_afni               :: Wrapper to combine environment+driving functionality to save image files of 3D dataset (nice in conjunction with imcat to form arrays of images)
5 :: imcat                        :: Very useful program for making grids of images and things (nice in conjunction with @chauffeur_afni or generally driving AFNI)
3 :: @djunct_4d_imager             :: Wrapper to combine environment+driving functionality to save image/movies files of 4D dataset
1 :: @djunct_calc_mont_dims.py     :: Sub-functionality of @djunct_dwi_selector.bash
1 :: @djunct_dwi_selector.bash     :: Helper/intermediate function for fat_proc_select_vols
1 :: @djunct_select_str.py         :: Sub-functionality of @djunct_dwi_selector.bash
3 :: plugout_drive                 :: Drive afni GUI from external program
1 :: plugout_ijk
1 :: plugout_tt
1 :: plugout_tta
5 :: @snapshot_volreg            :: Drive AFNI to save QC images of EPI-anatomical alignment
1 :: @snapshot_volreg3               :: (obsolete -> use @snapshot_volreg)
1 :: @CommandGlobb                  :: Execute AFNI commands for multiple datasets
1 :: prompt_popup                 :: Popup a dialog box with a message and buttons
1 :: prompt_user                 :: (obsolete -> use prompt_popup)
1 :: @AfniEnv                       :: Get and set AFNI environment variables


++ 2 :: Download/install demos
1 :: @Install_3dPFM_Demo
1 :: @Install_AfniRetinoDemo
1 :: @Install_ClustScat_Demo
4 :: @Install_D99_macaque           :: Install Saleem D99 macaque atlas and template
4 :: @Install_DBSproc               :: Install DBS processing pipeline script
3 :: @Install_FATCAT_DEMO          :: Install original FATCAT Demo for DTI + some FMRI processing
4 :: @Install_FATCAT_DEMO2          :: Install newer FATCAT Demo for DTI processing with fat_proc programs (and including TORTOISE and FreeSurfer processing)
3 :: @Install_FATMVM_DEMO          :: Install FATCAT+MVM statistical modeling demo, multivariate modeling in conjuction with tractography (also applies to correlation matrices such as from 3dNetCorr)
1 :: @Install_InstaCorr_Demo        :: Install demo data for InstaCorr, instant correlation
1 :: @Install_MEICA_Demo
1 :: @Install_NIH_Marmoset          :: Install NIH Marmoset atlas and template
1 :: @Install_RSFMRI_Motion_Group_Demo
1 :: @Install_TSrestMovieDemo


++ 3 :: Convert surfaces from other software
5 :: @SUMA_Make_Spec_FS          :: Convert output from standard FreeSurfer 'recon-all' processing to AFNI+SUMAland
1 :: @SUMA_Make_Spec_Caret         :: Convert output from standard Caret processing to AFNI+SUMAland
1 :: @SUMA_Make_Spec_SF            :: Convert output from standard SureFit processing to AFNI+SUMAland
1 :: @SUMA_FSvolToBRIK
1 :: @SUMA_renumber_FS           :: Renumber standard FS-'recon-all' seg+parc values; make tissue-grouped maps (part of @SUMA_Make_Spec_FS)
1 :: @suma_reprefixize_spec
1 :: @FSlabel2dset
1 :: FSread_annot
1 :: @FS_roi_label
1 :: parse_fs_lt_log.py          :: Parse FreeSurfer region labels to get indices


++ 3 :: Edit dsets: concatenate, split, add/remove slices
1 :: 3dbucket          :: Assemble a bucket dataset from multiple input sub-bricks3dTcat
4 :: 3dZeropad         :: Add zero slices around the edges of a dataset
1 :: 3dTsplit4D        :: Convert a 3D+time dataset into multiple 3D single-brick files
3 :: 3dZcat            :: Assemble a 3D+time dataset from multiple input sub-bricks
3 :: 3dAutobox         :: Automatically crop a dataset to remove empty space
3 :: 3dZcutup          :: Cut slices out of a dataset to make a 'thinner' dataset
1 :: 3dXYZcat          :: Glue multiple sub-bricks together along the {x|y|z}-axis
1 :: 3dZregrid         :: Interpolate a dataset to a different slice thickness


++ 4 :: Make/edit/evaluate stimulus timing files
4 :: make_random_timing.py    :: Generate random stimulus times files
4 :: timing_tool.py           :: Edit stimulus timing files
1 :: 1dMarry                   :: Combine ragged 1D files for use with 3dDeconvolve's -stim_times_AM2 option
1 :: make_stim_times.py       :: Convert 0/1 stim file format to stim times format
1 :: RSFgen                 :: (obsolete -> use make_random_timing.py)
1 :: @make_stim_file         :: (obsolete/esoteric/do not use; use what???); make stim files for 3dDeconvolve
1 :: stimband


++ 2 :: Miscellaneous file manipulations 
4 :: file_tool          :: Display or edit data in arbitrary files
4 :: 1d_tool.py         :: For manipulating and evaluating 1D files
1 :: @diff.files        :: Compare (diff) a set of files to those in another location
1 :: @diff.tree         :: Compare (diff) 2 directory trees of files
1 :: 2swap              :: Byte pair swap, e.g., ab ba
1 :: 4swap              :: Byte quad swap, e.g., abc dcba
1 :: 24swap             :: Mixed 2 and 4 byte swaps in same file
1 :: strblast           :: Find a string in a file and replace it with junk
1 :: @NoExt             :: Remove specified file extensions from file name
1 :: @NoPound           :: Change name of file or dataset to avoid pound (#) symbols
1 :: @np                :: Generate new prefix given some base prefix


++ 3 :: Convert statistics and p-values
4 :: ccalc               :: A command line calculator (like 3dcalc)
4 :: cdf                 :: Compute probabilities, thresholds for standard distributions
4 :: p2dsetstat          :: Convert a p-value to a stat, using parameters stored in a dset header

++ 1 :: Miscellaneous utilities
3 :: ccalc               :: A command line calculator (like 3dcalc)
3 :: cdf                 :: Compute probabilities, thresholds for standard distributions
4 :: count               :: Generate numbered strings for command line scripts
4 :: afni_history        :: Display a log of updates to AFNI code
5 :: apsearch            :: Simple+approx string searching; used in atlases and helps
1 :: byteorder           :: Report the byteorder of the current CPU


++ 1 :: Miscellaneous visualization tools
3 :: aiv                  :: AFNI Image Viewer program
1 :: plugin(Render[new])  :: Interactive volume rendering
1 :: plugin(Dataset#N)    :: Graph extra dataset time series in AFNI graph viewer
1 :: afni_open            :: Open various AFNI/SUMA files (*.xmat, *.pdf, etc.)
3 :: 3dGrayplot           :: Take a 3D+time dataset and make a summary 2D image for data quality review


++ 1 :: Supplementary/open programs included in AFNI
1 :: cjpeg                :: Compress an image file to a JPEG file
1 :: djpeg                :: Decompress a JPEG file to an image file
1 :: mpeg_encode          :: Convert sequence of images into MPEG movie
1 :: whirlgif             :: Concatenate series of GIFs into a single one


++ 3 :: Resting state FMRI parameters
3 :: 3dRSFC              :: Calculate RSFC parameters (ALFF, fALFF, RSFA, etc.) for uncensored time series
3 :: 3dReHo              :: Calculate ReHo (Kendall's coefficient of concordance) for time series
3 :: 3dLombScargle       :: Calculate amp/pow spectrum (like FFT) along time axis with missing time points
3 :: 3dAmpToRSFC         :: Calculate RSFC parameters (ALFF, fALFF, RSFA, etc.) from 3dLombScargle output


++ 1 :: Supplemental/underlying programs (no desc needed)
1 :: @global_parse   
1 :: lib_afni1D.py
1 :: afni_util.py
1 :: 3dToyProg


++ 0 :: Unclassed
1 :: 1dAstrip
1 :: @1dDiffMag
1 :: 1ddot
1 :: 1dfft
1 :: 1dFlagMotion
1 :: 1dgrayplot
1 :: 1dnorm
1 :: @2dwarper
1 :: @2dwarper.Allin
1 :: 2perm
1 :: 3dAcost
1 :: 3dbuc2fim
1 :: 3dClipLevel
1 :: 3dConformist
1 :: 3dDegreeCentrality
1 :: 3dECM
1 :: 3dEntropy
1 :: 3dGenFeatureDist
1 :: 3dGenPriors
1 :: 3dkmeans
1 :: 3dLFCD
1 :: 3dmaskSVD
1 :: 3dMSE
1 :: 3dMultiThresh
1 :: 3dnoise
1 :: 3dnvals
1 :: 3dPFM
1 :: 3dPolyfit
1 :: 3dproject
1 :: 3dretroicor
1 :: 3dSignatures
1 :: 3dSpaceTimeCorr
1 :: 3dSpatNorm
1 :: 3dStatClust
1 :: 3dsvm
1 :: 3dsvm_linpredict
1 :: 3dTnorm
1 :: 3dtoXdataset
1 :: 3dXClustSim
1 :: @4Daverage
1 :: @afni.run.me
1 :: afni_skeleton.py
1 :: AnalyzeTrace
1 :: balloon
1 :: BrainSkin
1 :: @build_afni_Xlib
1 :: @Center_Distance
1 :: @CheckForAfniDset
1 :: @clean_help_dir
1 :: @clip_volume
1 :: ConvexHull
1 :: @DeblankFileNames
1 :: demo.fixed.niml.do
1 :: demo.mobile.niml.do
1 :: @demo_prompt
1 :: @DO.examples
1 :: eg_main_chrono.py
1 :: @ElectroGrid
1 :: ent16
1 :: @escape-
1 :: @ExamineGenFeatDists
1 :: ExamineXmat
1 :: @fast_roi
1 :: FD2
1 :: fdrval
1 :: fftest
1 :: fim2
1 :: @fix_FSsphere
1 :: @float_fix
1 :: float_scan
1 :: ftosh
1 :: gen_epi_review.py
1 :: GLTsymtest
1 :: gui_uber_align_test.py
1 :: gui_uber_skel.py
1 :: gui_uber_subj.py
1 :: gui_uber_ttest.py
1 :: gui_xmat.py
1 :: @help.AFNI
1 :: help_format
1 :: im2niml
1 :: images_equal
1 :: imand
1 :: imaver
1 :: imcalc
1 :: imcutup
1 :: imdump
1 :: immask
1 :: imreg
1 :: imrotate
1 :: imstack
1 :: imstat
1 :: imupsam
1 :: inspec
1 :: @make_plug_diff
1 :: make_pq_script.py
1 :: meica.py
1 :: module_test_lib.py
1 :: mritopgm
1 :: mycat
1 :: myget
1 :: neuro_deconvolve.py
1 :: nicat
1 :: niccc
1 :: nifti1_test
1 :: niml_feedme
1 :: niprobe
1 :: nsize
1 :: option_list.py
1 :: @Purify_1D
1 :: python_module_test.py
1 :: qdelaunay
1 :: qhull
1 :: quotize
1 :: rbox
1 :: read_matlab_files.py
1 :: realtime_receiver.py
1 :: rmz
1 :: ROIgrow
1 :: rotcom
1 :: SampBias
1 :: ScaleToMap
1 :: @ScaleVolume
1 :: @ScriptCheck
1 :: serial_helper
1 :: sfim
1 :: @simulate_motion
1 :: @SkullStrip_TouchUp
1 :: SpharmDeco
1 :: @Spharm.examples
1 :: @statauxcode
1 :: @T1scale
1 :: tfim
1 :: @TimeDiff
1 :: tokens
1 :: uber_skel.py
1 :: uber_ttest.py
1 :: ui_xmat.py
1 :: uniq_images
1 :: @VolCenter
1 :: xmat_tool.py
1 :: Xphace

++ 0 :: R programs (in R; called by others)
1 :: 1dGC.R
1 :: 1dRplot
1 :: 1dRplot.R
1 :: 1dSVAR.R
1 :: 3dAOV.R
1 :: 3dGC.R
1 :: 3dICA.R
1 :: 3dICC.R
1 :: 3dICC_REML.R
1 :: 3dKS.R
1 :: 3dMEMA.R
1 :: 3dPFM.R
1 :: 3dRetinoPhase
1 :: 3dRowFillin
1 :: 3dRprogDemo
1 :: 3dRprogDemo.R
1 :: 3dSignatures.R
1 :: AFNI_Batch_R
1 :: AFNIplot.R
1 :: afni_run_R
1 :: @ANATICOR
1 :: @DoPerRoi.py
1 :: ExamineXmat.R
1 :: FIRdesign
1 :: Level2.R
1 :: @RenamePanga
1 :: @Reorder
1 :: @RetinoProc
1 :: @R_funclist
1 :: @ShowDynamicRange
1 :: Signatures.R
1 :: smooth.R
1 :: SpharmReco
